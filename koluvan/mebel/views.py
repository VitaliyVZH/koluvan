import logging
import time

from django.urls import reverse
from django.templatetags.static import static

from .forms import RequestCallBackForm
from django.urls import reverse_lazy
from django.views.generic import FormView, DetailView,TemplateView
from django.shortcuts import render
from django.http import HttpResponse
from django.utils.html import escape
from .models import Category
from utils.email import send_email_html
from utils.telegram import send_to_saved_messages

logger = logging.getLogger(__name__)


def custom_404(request, exception):
    try:
        return render(request, 'koluvan/404.html', status=404)
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ 404: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        return HttpResponse("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", status=404)


class MainView(FormView):
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞."""

    template_name = 'koluvan/main.html'
    form_class = RequestCallBackForm
    success_url = reverse_lazy('mebel:main')

    def get(self, request, *args, **kwargs):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –æ—Ç–∑—ã–≤–∞–º–∏,
        # –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–∞–π–º–µ—Ä –∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –æ—Ç–∑—ã–≤–∞ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤—Ä–µ–º—è —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ø–∞–¥–∞–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        # –¥–æ –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (–±–æ—Ç—ã —ç—Ç–æ –¥–µ–ª–∞—é—Ç –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ)
        request.session['form_start_time'] = time.time()
        return super().get(request, *args, **kwargs)

    def form_valid(self, form):
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        name = escape(form.cleaned_data['name'].title())
        phone = escape(form.cleaned_data['phone'])
        category = escape(form.cleaned_data.get('category', ''))
        raw_message = form.cleaned_data.get('message', '')
        website = form.cleaned_data.get('website', '')

        if website:
            return super().form_valid(form)

        start_time = self.request.session.get('form_start_time', 0)
        if time.time() - start_time < 5:  # –ú–µ–Ω–µ–µ 5 —Å–µ–∫—É–Ω–¥
            return super().form_valid(form)

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
        message_html = ''
        if raw_message:
            escaped_message = escape(raw_message)
            message_html = f"""
            <div class="info optional">
                <h3>–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:</h3>
                <p>{escaped_message}</p>
            </div>
            """

        # –§–æ—Ä–º–∏—Ä—É–µ–º HTML-–ø–∏—Å—å–º–æ
        email_body = f"""
        <html>
        <head>
            <style>
                body {{ 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
                    color: #333;
                    line-height: 1.6;
                    background-color: #f9f9f9;
                    padding: 20px;
                }}
                .container {{
                    max-width: 600px;
                    margin: 0 auto;
                    background: white;
                    padding: 30px;
                    border-radius: 10px;
                    box-shadow: 0 0 20px rgba(0,0,0,0.1);
                }}
                .header {{
                    color: #2c3e50;
                    border-bottom: 2px solid #3498db;
                    padding-bottom: 15px;
                    margin-bottom: 20px;
                }}
                .info {{ 
                    margin: 20px 0;
                    padding: 15px;
                    border-left: 4px solid #3498db;
                    background-color: #f8fafc;
                }}
                .optional {{
                    background-color: #f1f8ff;
                    border-left-color: #1e6bd0;
                }}
                .label {{
                    font-weight: bold;
                    color: #1e6bd0;
                    min-width: 120px;
                    display: inline-block;
                }}
                .contact-info {{
                    background-color: #e3f2fd;
                    padding: 15px;
                    border-radius: 8px;
                }}
                .footer {{
                    margin-top: 30px;
                    padding-top: 20px;
                    border-top: 1px solid #eee;
                    color: #7f8c8d;
                    font-size: 0.9em;
                    text-align: center;
                }}
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h2>üìû –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</h2>
                </div>

                <div class="contact-info">
                    <div class="info">
                        <p><span class="label">–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞:</span> {name}</p>
                        <p><span class="label">–¢–µ–ª–µ—Ñ–æ–Ω:</span> 
                            <a href="tel:{phone}" style="color: #0d47a1; text-decoration: none;">
                                <strong>{phone}</strong>
                            </a>
                        </p>
                    </div>
        """

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        if category:
            email_body += f"""
                    <div class="info optional">
                        <p><span class="label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</span> {category}</p>
                    </div>
            """

        email_body += f"""
                </div>
                {message_html}

                <div class="footer">
                    <p>üïí –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞: <b>–≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç</b></p>
                    <p>‚úâÔ∏è –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ</p>
                </div>
            </div>
        </body>
        </html>
        """

        header_text = f"–ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –æ—Ç {name}"
        send_email_html(subject=header_text, body=email_body, content_subtype='html')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
        message = (f"{header_text}\n\n"
                   f"–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: {name}\n"
                   f"–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞: {phone}\n"
                   f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ü–∏–∏: {category}\n"
                   f"–°–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: {raw_message}")
        send_to_saved_messages(message)

        return super().form_valid(form)

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)

        title = '–ú–µ–±–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ | –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–Ω–æ–π –º–µ–±–µ–ª–∏'
        description = '–ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–Ω–æ–π –º–µ–±–µ–ª–∏ –Ω–∞ –∑–∞–∫–∞–∑ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ. –ö—É—Ö–Ω–∏, —à–∫–∞—Ñ—ã, —Ç—É–º–±—ã –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º. –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –≥–∞—Ä–∞–Ω—Ç–∏—è.'
        keywords = '–º–µ–±–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑ –º–∞—Ä–∏—É–ø–æ–ª—å, –∫–æ—Ä–ø—É—Å–Ω–∞—è –º–µ–±–µ–ª—å, –∫—É—Ö–Ω–∏ –Ω–∞ –∑–∞–∫–∞–∑, —à–∫–∞—Ñ—ã –∫—É–ø–µ, —Ç—É–º–±–æ—á–∫–∏ –Ω–∞ –∑–∞–∫–∞–∑, –º–µ–±–µ–ª—å –ø–æ–¥ –∑–∞–∫–∞–∑, –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –º–µ–±–µ–ª–∏ –º–∞—Ä–∏—É–ø–æ–ª—å, –≥–∞—Ä–Ω–∏—Ç—É—Ä—ã –Ω–∞ –∑–∞–∫–∞–∑, –≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –º–µ–±–µ–ª—å'
        image = self.request.build_absolute_uri(static('img/logo.svg'))

        context['url'] = self.request.build_absolute_uri(reverse('mebel:main'))

        context['title'] = '–ú–µ–±–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ | –í –æ–≥–æ–≤–æ—Ä–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏'
        context['description'] = '–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–∞–º–µ—Ä –∏ –ø—Ä–æ–µ–∫—Ç! –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ö–æ–Ω—å, —à–∫–∞—Ñ–æ–≤ –∏ —Ç—É–º–± –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º —Ä–∞–∑–º–µ—Ä–∞–º. ‚≠ê 500+ –¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ'
        context['keywords'] = keywords

        context['image'] = image

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏ (meta name).
        context['meta'] = {
            'title': title,
            'description': description,
            'keywords': keywords,
            'image': image,
        }
        return context


class CategoryDetailView(DetailView):
    model = Category
    template_name = 'koluvan/category-detail.html'
    context_object_name = 'category'
    slug_url_kwarg = 'slug'

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        category = self.object

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        additional_images = category.additional_images.all()
        context['additional_images'] = additional_images

        # –ú–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è SEO
        context['meta'] = {
            'title': category.meta_title if category.meta_title else f"{category.name} | –ú–µ–±–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ",
            'description': category.meta_description if category.meta_description else f"–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name}. –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –º–µ–±–µ–ª–∏ –Ω–∞ –∑–∞–∫–∞–∑ –≤ –ú–∞—Ä–∏—É–ø–æ–ª–µ.",
            'keywords': category.meta_keywords if category.meta_keywords else f"–º–µ–±–µ–ª—å –Ω–∞ –∑–∞–∫–∞–∑ –º–∞—Ä–∏—É–ø–æ–ª—å, {category.name.lower()}, –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç, —Ñ–æ—Ç–æ",
            'image': self.request.build_absolute_uri(category.main_image.url) if category.main_image else None,
        }
        return context


class PrivacyPolicyTemplateView(TemplateView):
    template_name = 'koluvan/privacy-policy.html'
